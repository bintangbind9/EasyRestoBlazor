@inherits LayoutComponentBase

@inject ISessionStorageService SessionStorageService

<AuthenticationGuard />

@* Required *@
<MudThemeProvider @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />

@* Needed for dialogs *@
<MudDialogProvider />

@* Needed for snackbars *@
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudSpacer />
        <MudToggleIconButton Toggled="_isDarkMode"
                             ToggledChanged="OnIsDarkChanged"
                             Icon="@Icons.Material.Filled.LightMode"
                             Color="@Color.Inherit"
                             ToggledIcon="@Icons.Material.Filled.DarkMode"
                             ToggledColor="@Color.Inherit"
                             title="@(_isDarkMode ? "Dark" : "Light")" />
        <MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" Elevation="2">
        <MudDrawerHeader>
            <MudText Typo="Typo.h5" Class="mt-1">Easy Resto</MudText>
        </MudDrawerHeader>
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;
    private bool _isDarkMode;

    protected override async void OnInitialized()
    {
        _isDarkMode = await SessionStorageService.GetItemAsync<bool>(SessionCode.EasyRestoIsDarkMode.ToString());
        StateHasChanged();
    }

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    async void OnIsDarkChanged(bool isDark)
    {
        _isDarkMode = isDark;
        await SessionStorageService.SetItemAsync<bool>(SessionCode.EasyRestoIsDarkMode.ToString(), _isDarkMode);
        StateHasChanged();
    }
}